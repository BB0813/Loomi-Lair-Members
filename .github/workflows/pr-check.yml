name: PR 验证

on:
  pull_request_target:
    branches:
      - main

jobs:
  validate:
    name: 验证成员数据
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate member files
        id: validate
        run: |
          echo "## 🔍 验证结果" >> $GITHUB_STEP_SUMMARY
          if npm run validate; then
            echo "✅ 所有成员文件验证通过！" >> $GITHUB_STEP_SUMMARY
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ 验证失败，请检查错误信息" >> $GITHUB_STEP_SUMMARY
            echo "status=failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Test build
        run: |
          echo "## 🔨 构建测试" >> $GITHUB_STEP_SUMMARY
          npm run build
          echo "✅ 构建成功" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 统计信息" >> $GITHUB_STEP_SUMMARY
          echo "- 成员数量: $(cat dist/members.json | grep -c '"id":')" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR
        if: steps.validate.outputs.status == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const members = JSON.parse(fs.readFileSync('dist/members.json', 'utf8'));
            const memberCount = members.length;

            const comment = `## ✅ 验证通过！

            🎉 你的成员数据已通过验证！

            **📊 当前统计：**
            - 总成员数：${memberCount} 人

            **✨ 下一步：**
            合并此 PR 后，数据将自动构建并发布。

            ---
            *自动生成 by Loomi Lair Bot*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
